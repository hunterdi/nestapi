version: '3'

services:
  pgsql:
    image: postgres
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    container_name: 'pgsql'
    restart: always
    volumes:
      - /home/di/Desenvolvimento/Docker/pg-data:/var/lib/postgresql/data
    networks:
      - postgres-pgadmin-network
      - web-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '16543:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - pgsql
    networks:
      - postgres-pgadmin-network

  mongo:
    image: mongo
    ports:
      - `${MONGO_PORT}:27017`
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - /home/di/Desenvolvimento/Docker/mongo-data:/data/db
    container_name: 'mongo'
    restart: always
    networks:
      - web-network
      - mongo-express-network

  mongo-express:
    image: mongo-express
    ports:
      - 18081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ADMIN_EMAIL}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    networks:
      - mongo-express-network

  redis:
    image: redis
    ports:
      - ${REDIS_PORT}:6379
    container_name: 'redis'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - web-network

  nestapi:
    image: node:latest
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - web-network
    container_name: 'nest_api'
    restart: always
    depends_on:
      - pgsql
      - mongo
      - redis
    volumes:
      - /home/di/Desenvolvimento/Projects/NestApi/usr/src/app
      - /home/di/Desenvolvimento/Projects/NestApi/usr/src/app/node_modules
    env_file:
      - .env
    command: npm run start:prod
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'

networks:
  postgres-pgadmin-network:
    driver: bridge
  web-network:
    driver: bridge
  mongo-express-network:
    driver: bridge
