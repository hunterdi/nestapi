version: '3.7'

services:
  pgsql:
    image: postgres
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    container_name: 'pgsql'
    restart: always
    volumes:
      - /home/di/Desenvolvimento/Docker/pg-data:/var/lib/postgresql/data
    network:
      - pgsql-pgadmin-network
      - webnet

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '16543:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - pgsql
    network:
      - pgsql-pgadmin-network

  mongodb:
    image: mongo:latest
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    network:
      - webnet
    container_name: 'mongo'
    restart: always

  redis:
    image: redis:lastest
    container_name: 'redis'
    network:
      - webnet

  nestapi:
    image: node:latest
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    network:
      - webnet
    container_name: 'nest_api'
    restart: always
    depends_on:
      - pgsql
      - mongodb
      - redis
    volumes:
      - /home/di/Desenvolvimento/Projects/NestApi/usr/src/app
      - /home/di/Desenvolvimento/Projects/NestApi/usr/src/app/node_modules
    env_file:
      - .env
    command: npm run start:prod
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
  
  networks:
    pgsql-pgadmin-network:
      driver: bridge
    webnet:
      driver: bridge
